// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty;

  this.Application = {
    initialize: function() {
      var uri, url;
      if (this.on_initialize) {
        this.on_initialize();
      }
      this.setup_google_analytics();
      this.setup_google_web_font();
      url = window.location.toString();
      uri = Utils.to_uri(url);
      return $(function() {
        return Page.transit(uri, false);
      });
    },
    initialize_google_analytics: function(gid, custom_variables) {
      this.google_analytics_id_ = gid;
      return this.google_analytics_variables_ = custom_variables;
    },
    setup_google_analytics: function() {
      var src,
        _this = this;
      if (this.google_analytics_id_) {
        src = ('https:' === document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/u/ga_debug.js';
        return $.getScript(src, function(data, textStatus) {
          var key, pageTracker, val, _ref;
          try {
            _this.page_tracker_ = pageTracker = _gat._createTracker(Application.google_analytics_id_);
            if (_this.google_analytics_variables_ != null) {
              _ref = _this.google_analytics_variables_;
              for (key in _ref) {
                if (!__hasProp.call(_ref, key)) continue;
                val = _ref[key];
                pageTracker._setCustomVar(val.index, key, val.val, val.scope);
              }
            }
            return pageTracker._trackPageview();
          } catch (_error) {}
        });
      }
    },
    setup_google_web_font: function() {
      var s, wf;
      if (window.WebFontConfig) {
        wf = document.createElement("script");
        wf.src = ("https:" === document.location.protocol ? "https" : "http") + "://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js";
        wf.type = "text/javascript";
        wf.async = "true";
        s = document.getElementsByTagName("script")[0];
        return s.parentNode.insertBefore(wf, s);
      }
    },
    get_application_parameter: function(key) {
      return this.application_parameters_[key];
    },
    get_application_parameters: function() {
      return this.application_parameters_;
    },
    track_google_analytics_event: function(category, action, label) {
      if (this.page_tracker_ != null) {
        return this.page_tracker_._trackEvent(category, action, label);
      }
    }
  };

}).call(this);
